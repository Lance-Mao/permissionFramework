<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlw.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.mlw.entity.SysUser">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="userName" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="userState" jdbcType="INTEGER" property="userstate"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="userDesc" jdbcType="VARCHAR" property="userdesc"/>
        <result column="userImg" jdbcType="VARCHAR" property="userimg"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userName, password, userState, salt, createTime, userDesc, userImg
  </sql>
    <select id="selectByExample" parameterType="com.mlw.entity.SysUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.mlw.entity.SysUserExample">
        delete from sys_user
        <if test="parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mlw.entity.SysUser">
    insert into sys_user (id, userName, password, 
      userState, createTime, userDesc, 
      userImg)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userstate,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{userdesc,jdbcType=VARCHAR}, 
      #{userimg,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.mlw.entity.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userstate != null">
                userState,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="userdesc != null">
                userDesc,
            </if>
            <if test="userimg != null">
                userImg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userstate != null">
                #{userstate,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="userdesc != null">
                #{userdesc,jdbcType=VARCHAR},
            </if>
            <if test="userimg != null">
                #{userimg,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mlw.entity.SysUserExample" resultType="java.lang.Long">
        select count(*) from sys_user
        <if test="parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.userstate != null">
                userState = #{record.userstate,jdbcType=INTEGER},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userdesc != null">
                userDesc = #{record.userdesc,jdbcType=VARCHAR},
            </if>
            <if test="record.userimg != null">
                userImg = #{record.userimg,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_user
        set id = #{record.id,jdbcType=VARCHAR},
        userName = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        userState = #{record.userstate,jdbcType=INTEGER},
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
        userDesc = #{record.userdesc,jdbcType=VARCHAR},
        userImg = #{record.userimg,jdbcType=VARCHAR}
        <if test="parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mlw.entity.SysUser">
        update sys_user
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userstate != null">
                userState = #{userstate,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="userdesc != null">
                userDesc = #{userdesc,jdbcType=VARCHAR},
            </if>
            <if test="userimg != null">
                userImg = #{userimg,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mlw.entity.SysUser">
    update sys_user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userState = #{userstate,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      userDesc = #{userdesc,jdbcType=VARCHAR},
      userImg = #{userimg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="getUserAll" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from sys_user
    </select>

    <select id="findSysUserByUsername" parameterType="string" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        WHERE userName = #{username}
    </select>

</mapper>