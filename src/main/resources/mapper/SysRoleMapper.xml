<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mlw.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.mlw.entity.SysRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="roleDesc" jdbcType="VARCHAR" property="roledesc" />
    <result column="roleState" jdbcType="INTEGER" property="rolestate" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, roleName, roleDesc, roleState, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mlw.entity.SysRole">
    insert into sys_role (id, roleName, roleDesc, 
      roleState, createTime)
    values (#{id,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{rolestate,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mlw.entity.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="roledesc != null">
        roleDesc,
      </if>
      <if test="rolestate != null">
        roleState,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="rolestate != null">
        #{rolestate,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlw.entity.SysRole">
    update sys_role
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        roleDesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="rolestate != null">
        roleState = #{rolestate,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlw.entity.SysRole">
    update sys_role
    set roleName = #{rolename,jdbcType=VARCHAR},
      roleDesc = #{roledesc,jdbcType=VARCHAR},
      roleState = #{rolestate,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="findRoleByUserId" parameterType="string" resultType="string">
        select r.roleName from sys_role r , sys_user_role ur WHERE ur.roleId = r.id AND ur.userId = #{id};
    </select>
</mapper>